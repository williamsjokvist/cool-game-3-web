---
import Layout from "../layouts/Layout.astro";
import Nav from "../components/Nav.astro";

import { CharacterModel } from "../types/character";
import CharacterPopup from "../components/CharacterPopup.astro";

let onlineCharacters: CharacterModel[] = [];

const getOnlineCharacters = async () => {
  try {
    const res = await fetch(`${import.meta.env.SERVER_URL}/characters/online`);
    if (!res.ok) {
      console.log("Failed to fetch online characters");
    }

    const body = await res.json();
    onlineCharacters = body;
  } catch (err) {
    console.log("Failed to fetch online characters");
  }

  return onlineCharacters;
};

await getOnlineCharacters();
---

<Layout title="Cool Game 3">
  <main class="pb-24">
    <Nav />

    {
      onlineCharacters && onlineCharacters.length > 0 && (
        <section class="text-white text-center my-8 text-xl">
          <h2 class="text-4xl font-bold">
            Players Online: {onlineCharacters.length}
          </h2>

          <table class="mx-auto mt-8">
            <thead>
              <tr>
                <th class="text-left font-bold px-4 py-1">Name</th>
                <th class="text-left font-bold px-4 py-1">LV</th>
                <th class="text-left font-bold px-4 py-1">Job</th>
                <th class="text-left font-bold px-4 py-1">EXP</th>
                <th class="text-left font-bold px-4 py-1">Map</th>
              </tr>
            </thead>
            <tbody>
              {onlineCharacters.map((character) => {
                const {
                  Name,
                  Level,
                  JobName,
                  StreetName,
                  MapName,
                  Exp,
                  ExpRequired,
                } = character;

                const expPercentage =
                  ((Exp / ExpRequired) * 100).toFixed(2) + "%";

                return (
                  <tr class="relative group even:bg-[rgba(255,255,255,0.05)] hover:bg-[rgba(255,255,255,0.125)]">
                    <td class="text-left px-4 py-2 text-base font-arial">
                      <span class='bg-[#5479c4] border-solid border-white border-2 shadow-[0px_0px_3px_rgba(0,0,0,.5)] px-3 py-1 rounded-md text-white'>
                        {Name}          
                      </span>
                      <CharacterPopup character={character} />
                    </td>
                    <td class="text-left px-4 py-2 font-bold text-base">
                      {Level.toString()
                        .split("")
                        .map((num: string) => (
                          <span class={`level-no level-no-${num}`} />
                        ))}
                    </td>
                    <td class="text-left px-4 py-2">{JobName}</td>
                    <td class="text-left px-4 py-2">{expPercentage}</td>
                    <td class="text-left px-4 py-2">
                      {StreetName} - {MapName}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </section>
      )
    }
  </main>
</Layout>

<style is:global></style>
